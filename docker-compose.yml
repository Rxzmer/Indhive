services:
  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_DB: indihive_db
      POSTGRES_USER: indihive_user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U indihive_user -d indihive_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: spring_app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/indihive_db  
      SPRING_DATASOURCE_USERNAME: indihive_user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      JWT_SECRET: una_clave_super_segura_y_larga_que_deberias_cambiar_mas_de_32_bytes
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: react_app
    environment:
      REACT_APP_API_URL: http://spring_app:8080
    ports:
      - "3000:80"  
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
